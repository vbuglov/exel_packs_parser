{"ast":null,"code":"import _toConsumableArray from \"/home/vyc/Documents/packparcerwithcalcs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { range } from \"ramda\";\nimport { rawData, startPackCol, finishPackCol, startCalcsCol, finishCalcsCol } from \"./data\";\nvar alpabet = range(65, 91).map(function (el) {\n  return String.fromCharCode(el);\n});\nvar withA = alpabet.map(function (el) {\n  return \"A\".concat(el);\n});\nvar withB = alpabet.map(function (el) {\n  return \"B\".concat(el);\n});\nvar withC = alpabet.map(function (el) {\n  return \"C\".concat(el);\n});\nvar withD = alpabet.map(function (el) {\n  return \"D\".concat(el);\n});\nvar cols = [].concat(_toConsumableArray(alpabet), _toConsumableArray(withA), _toConsumableArray(withB), _toConsumableArray(withC), _toConsumableArray(withD));\n\nvar addNoData = function addNoData(workData) {\n  return workData.replace(/\\t\\t/gm, \"\\t__empty__\\t\");\n};\n\nvar prepData = function prepData(workData) {\n  var prepedData = addNoData(workData).split(\"\\n\").filter(function (el) {\n    return el;\n  }).map(function (el) {\n    return el.split(\"\\t\");\n  }).map(function (el) {\n    return el.map(function (el) {\n      return el === \"__empty__\" ? \"\" : el;\n    });\n  });\n  return [cols].concat(_toConsumableArray(prepedData));\n};\n\nvar pack = function pack() {\n  var startIdnex = cols.findIndex(function (el) {\n    return el === startPackCol;\n  });\n  var fisnishIdnex = cols.findIndex(function (el) {\n    return el === finishPackCol;\n  });\n  return prepData(rawData).map(function () {\n    var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return el.slice(startIdnex, fisnishIdnex);\n  });\n};\n\nvar calcs = function calcs() {\n  var startIdnex = cols.findIndex(function (el) {\n    return el === startCalcsCol;\n  });\n  var fisnishIdnex = cols.findIndex(function (el) {\n    return el === finishCalcsCol;\n  });\n  return prepData(rawData).map(function () {\n    var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return el.slice(startIdnex, fisnishIdnex);\n  });\n};\n\nexport { prepData, cols, pack, calcs };","map":{"version":3,"sources":["/home/vyc/Documents/packparcerwithcalcs/src/parseExlsPacks/exelParser.js"],"names":["range","rawData","startPackCol","finishPackCol","startCalcsCol","finishCalcsCol","alpabet","map","el","String","fromCharCode","withA","withB","withC","withD","cols","addNoData","workData","replace","prepData","prepedData","split","filter","pack","startIdnex","findIndex","fisnishIdnex","slice","calcs"],"mappings":"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","sourcesContent":["import { range } from \"ramda\";\nimport {\n  rawData,\n  startPackCol,\n  finishPackCol,\n  startCalcsCol,\n  finishCalcsCol,\n} from \"./data\";\n\nconst alpabet = range(65, 91).map((el) => String.fromCharCode(el));\n\nconst withA = alpabet.map((el) => `A${el}`);\nconst withB = alpabet.map((el) => `B${el}`);\nconst withC = alpabet.map((el) => `C${el}`);\nconst withD = alpabet.map((el) => `D${el}`);\n\nconst cols = [...alpabet, ...withA, ...withB, ...withC, ...withD];\n\nconst addNoData = (workData) => workData.replace(/\\t\\t/gm, \"\\t__empty__\\t\");\n\nconst prepData = (workData) => {\n  const prepedData = addNoData(workData)\n    .split(\"\\n\")\n    .filter((el) => el)\n    .map((el) => el.split(\"\\t\"))\n    .map((el) => el.map((el) => (el === \"__empty__\" ? \"\" : el)));\n  return [cols, ...prepedData];\n};\n\nconst pack = () => {\n  const startIdnex = cols.findIndex((el) => el === startPackCol);\n  const fisnishIdnex = cols.findIndex((el) => el === finishPackCol);\n  return prepData(rawData).map((el = []) => el.slice(startIdnex, fisnishIdnex));\n};\n\nconst calcs = () => {\n  const startIdnex = cols.findIndex((el) => el === startCalcsCol);\n  const fisnishIdnex = cols.findIndex((el) => el === finishCalcsCol);\n  return prepData(rawData).map((el = []) => el.slice(startIdnex, fisnishIdnex));\n};\n\nexport { prepData, cols, pack, calcs };\n"]},"metadata":{},"sourceType":"module"}